---
title: "ANCOM BC2" 
subtitle: "Differential abundance analysis with
Analysis of Compositions of Microbiomes with Bias Correction 2
(ANCOM-BC2)" 
author: "Sarah Tanja" 
date: 10/14/2025 
date-modified: today
format: 
  gfm: 
    toc: true 
    number-sections: true 
html: 
  theme: journal
  highlight-style: github 
  page-layout: full 
  code-background: true
  code-tools: 
    source: true 
    toggle: true 
  toc: true 
  toc-depth: 2
  toc-location: left 
  number-sections: true 
  df-print: kable 
  smooth-scroll: true 
  link-external-icon: true 
  link-external-newwindow: true
---

# Setup

## Install & load packages

```{r}
# 1) Verify versions
R.version.string
if (!requireNamespace("BiocManager", quietly = TRUE)) install.packages("BiocManager")
BiocManager::version()

# 2) If the Bioc version shown is NOT 3.15/3.16, set it explicitly (R 4.2):
#BiocManager::install(version = "3.15")  # or "3.16" also matches R 4.2

# 3) Install ANCOMBC & phyloseq
BiocManager::install("ANCOMBC")
BiocManager::install("phyloseq")
```

```{r}
BiocManager::version()
BiocManager::valid()
packageVersion("ANCOMBC")
sessionInfo()
```

```{r}
#install.packages("tidyverse")
#install.packages("DT") 
install.packages("devtools"); devtools::install_github("jbisanz/qiime2R")
```

The R package `DT` provides an interface to the JavaScript library DataTables to create HTML tables within R .. it is loaded in the `ANCOMBC` vignette...

```{r}
library(ANCOMBC)
library(tidyverse)
library(qiime2R)
library(phyloseq)
library(DT)
options(DT.options = list(
  initComplete = JS("function(settings, json) {",
  "$(this.api().table().header()).css({'background-color': 
  '#000', 'color': '#fff'});","}")))

# It appears to be a package compatibility issue between the release version of 
# phyloseq and lme4, a fresh installation of phyloseq might be needed
# See this post: https://github.com/lme4/lme4/issues/743
# remotes::install_github("joey711/phyloseq", force = TRUE)
```

```{r}
getwd()
```

# Background

[ANCOM-BC2 vignette](https://www.bioconductor.org/packages/release/bioc/vignettes/ANCOMBC/inst/doc/ANCOMBC2.html)

## Inputs

### OTU feature table

-   Count table (raw integer counts) — one of:

    -   BIOM file (feature-table.biom)

    -   **TSV**/CSV count table (rows = features/ASVs/**OTUs** and **columns = samples**, or vice versa — see check below)

    -   QIIME2 feature table artifact (.qza)

```{r}
otu_table <- read_tsv("../salipante/241121_StonyCoral/270x200/1st_collapse/feature-table.tsv", skip = 1, show_col_types = FALSE)

otu_table <- otu_table %>% 
  rename(OTU_ID = "#OTU ID")

head(otu_table)
```

### Metadata

-   Sample metadata (mapping file / metadata.tsv) — one row per sample; sample IDs must exactly match the sample IDs in the count table.

```{r}
metadata <- read_csv("../metadata/metadata.csv")
```

### Taxonomy table

-   Taxonomy table (feature -\> taxonomy) rows = features, columns = taxonomic ranks. Useful for annotating results.

    ```{r}
    tax_path <- "../salipante/241121_StonyCoral/270x200/250414_270x200_representative-sequences_taxonomy.qza" 
    tax <- read_tsv(tax_path, show_col_types = FALSE)
    colnames(tax)
    ```

## Outputs

# Convert feature table to matrix

```{r}
# convert to matrix with features as rows
otu_mat <- otu_table %>% 
  select(!OTU_ID) %>% 
  as.matrix(.)

# make rownames from otu_table OTU_ID column 
rownames(otu_mat) <- otu_table$OTU_ID

```

OTUs should be positive integers! Check to make sure there are no NA or negative values

```{r}
# quick sanity checks
if (any(is.na(otu_mat))) stop("NA values found in the OTU matrix")
if (any(otu_mat < 0)) stop("Negative counts found in the OTU matrix")
```

Check to see if there are any differences between OTU sample id and metadata sample id character strings. This should return a '0'.

```{r}
setdiff(colnames(otu_mat), metadata$sample_id)
```

# Create phyloseq object

```{r}
ps <- phyloseq(otu_table(otu_mat, taxa_are_rows = TRUE),
               sample_data(as.data.frame(metadata)))
```

# Run ANCOM-BC2

```{r}
# 4) Run ANCOM-BC
# Replace "Treatment" with the metadata column you want as predictor.
# If you have covariates, include them in the formula like "Treatment + Age"
res_ancombc <- ancombc(phyloseq = ps,
                       formula = "~stage + leachate + stage:leachate",
                       p_adj_method = "BH",
                       zero_cut = 0.90,    # drop taxa with >90% zeros; tune as needed
                       lib_cut = 1000,     # min library size; adjust for your data
                       group = "Treatment",
                       struc_zero = TRUE,
                       neg_lb = TRUE)
```

```{r}
# Results
res_ancombc$beta        # coefficients
res_ancombc$res          # full result table
res_ancombc$diff_abn    # logical matrix: TRUE if differential
```

```{r}
# Example: get significant taxa
sig_taxa <- rownames(res_ancombc$res)[res_ancombc$res$q_val < 0.05]
sig_taxa
```
